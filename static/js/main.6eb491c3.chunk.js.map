{"version":3,"sources":["components/Search.js","components/ForecastCard.js","components/Forecast.js","components/HighlightCard.js","components/TodayHighlights.js","components/CurrentWeatherCard.js","components/CurrentWeather.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","marginTop","width","Search","getQuerySearch","useState","search","setSearch","formSubmit","e","preventDefault","className","FormControl","InputLabel","htmlFor","Input","id","value","onChange","input","target","startAdornment","InputAdornment","position","SearchOutlined","Button","variant","color","type","onClick","disabled","disableElevation","ForecastCard","img","desc","temp","date","city","country","Card","CardContent","CardMedia","component","alt","image","title","Typography","marginBottom","Weather","cityName","weather","length","Grid","container","spacing","map","weatherItem","item","index","xs","md","lg","process","icon","description","Math","round","main","dt","key","HighlightCard","stat","TodayHighlights","humidity","wind","speed","visibility","feels_like","temp_min","temp_max","CurrentWeatherCard","CurrentWeather","App","weatherDetails","results","setResults","query","setQuery","useEffect","a","URL","axios","get","params","units","response","console","log","data","name","list","fetchWeather","Container","space","Forecast","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6eb491c3.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Button, FormControl, InputLabel, Input, InputAdornment } from '@material-ui/core'\r\nimport { SearchOutlined } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  '@global': {\r\n    '.search-section': {\r\n      marginTop: '5rem'\r\n    },\r\n    '.search-form': {\r\n      width: '80%'\r\n    },\r\n    '.search-button': {\r\n      marginTop: '1rem'\r\n    },\r\n  }\r\n});\r\n\r\nfunction Search({ getQuerySearch }) {\r\n  useStyles();\r\n\r\n  const [search, setSearch] = useState('')\r\n\r\n  const searchInput = (input) => {\r\n    setSearch(input)\r\n  }\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault()\r\n    getQuerySearch(search)\r\n    setSearch('')\r\n  }\r\n\r\n  return (\r\n    <section className=\"search-section\">\r\n      <FormControl className='search-form'>\r\n        <InputLabel \r\n          htmlFor=\"input-with-icon-adornment\"\r\n        >\r\n          Search for a city\r\n        </InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-adornment\"\r\n          value={search}\r\n          onChange={(e) => searchInput(e.target.value)}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <SearchOutlined />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        {(search === '') \r\n        ? (<Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            className=\"search-button\" \r\n            type=\"submit\" \r\n            onClick={formSubmit}\r\n            disabled\r\n         >\r\n          Search\r\n          </Button>\r\n        ) : ( <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              className=\"search-button\" \r\n              type=\"submit\" \r\n              onClick={formSubmit}\r\n              disableElevation\r\n              >  \r\n                Search\r\n              </Button>\r\n        )}\r\n      </FormControl>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core'\r\n\r\nfunction ForecastCard({img, desc, temp, date, city, country}) {\r\n  return (\r\n    <>\r\n      <Card variant='outlined'>\r\n        <CardContent>\r\n          <CardMedia \r\n            component=\"img\"\r\n            alt={desc}\r\n            image={img}\r\n            title={desc}\r\n          />\r\n          <Typography variant=\"h5\">\r\n            {desc}\r\n          </Typography>\r\n          <Typography variant=\"h2\">\r\n            {temp}\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {date}\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            {`${city}, ${country}`}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ForecastCard\r\n","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport ForecastCard from './ForecastCard'\r\n\r\nconst useStyles = makeStyles({\r\n  '@global': {\r\n    '.heading': {\r\n      marginTop: '3rem',\r\n      marginBottom: '1rem'\r\n    },\r\n  }\r\n});\r\n\r\nfunction Weather({cityName, country, weather}) {\r\n  useStyles()\r\n\r\n  return (\r\n    <section>\r\n      {(weather.length > 0)\r\n      ? (<Typography variant=\"h2\" className='heading'>\r\n          Forecast\r\n      </Typography>\r\n        ) : ('')\r\n      }\r\n      <Grid container spacing={2}> \r\n        {weather.map((weatherItem) => (\r\n          weatherItem.weather.map((item, index) => (\r\n            <Grid item xs={12} md={6} lg={4}> \r\n              <ForecastCard \r\n                img={process.env.PUBLIC_URL + `/weather-icons/${item.icon}.png`} \r\n                desc={`${item.description}`}\r\n                temp={`${Math.round(weatherItem.main.temp)}\\u00b0F`}\r\n                date={weatherItem.dt}\r\n                city={cityName}\r\n                country={country}\r\n                key={index}\r\n              />\r\n            </Grid>\r\n          ))\r\n        ))}\r\n      </Grid> \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\n\r\nfunction HighlightCard({title, stat}) {\r\n  return (\r\n    <>\r\n      <Card variant='outlined'>\r\n        <CardContent>\r\n          <Typography variant=\"h5\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"h3\">\r\n            {stat}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HighlightCard\r\n","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport HighlightCard from './HighlightCard'\r\n\r\nconst useStyles = makeStyles({\r\n  '@global': {\r\n    '.highlights': {\r\n      marginTop: '2rem'\r\n    },\r\n  }\r\n});\r\n\r\nfunction TodayHighlights({ weather }) {\r\n  useStyles()\r\n\r\n  return (\r\n    <section className='highlights'>\r\n      {(weather.length > 0)\r\n        ? ( <Typography variant=\"h2\" className='heading'>\r\n              Today's Highlights\r\n            </Typography>\r\n        ) : ( <Typography variant=\"h2\" className='heading'>\r\n                No data to show... please try searching for a city\r\n              </Typography>)\r\n      }\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Humidity' stat={`${weather[0].main.humidity}%`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Wind Speed' stat={`${weather[0].wind.speed}mph`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Visibility' stat={`${weather[0].visibility}ft`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Feels Like' stat={`${weather[0].main.feels_like}\\u00b0F`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Low' stat={`${weather[0].main.temp_min}\\u00b0F`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='High' stat={`${weather[0].main.temp_max}\\u00b0F`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TodayHighlights\r\n","import React from 'react'\r\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core'\r\n\r\nfunction CurrentWeatherCard({img, desc, temp, date, city, country}) {\r\n  return (\r\n    <>\r\n      <Card variant='outlined'>\r\n        <CardContent>\r\n          <CardMedia \r\n            component=\"img\"\r\n            alt={desc}\r\n            image={img}\r\n            title={desc}\r\n          />\r\n          <Typography variant=\"h5\">\r\n            {desc}\r\n          </Typography>\r\n          <Typography variant=\"h2\">\r\n            {temp}\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {date}\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            {`${city}, ${country}`}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrentWeatherCard\r\n","import React from 'react'\r\nimport CurrentWeatherCard from './CurrentWeatherCard'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  '@global': {\r\n    '.current-weather': {\r\n      marginTop: '3rem',\r\n      width: '80%'\r\n    },\r\n  }\r\n});\r\n\r\nfunction CurrentWeather({ cityName, country, weather }) {\r\n  useStyles()\r\n\r\n  return (\r\n    <section className='current-weather'>\r\n      {(weather.length > 0)\r\n        ? ( <CurrentWeatherCard \r\n          img={process.env.PUBLIC_URL + `/weather-icons/${weather[0].weather[0].icon}.png`} \r\n          desc={`${weather[0].weather[0].description}`}\r\n          temp={`${Math.round(weather[0].main.temp)}\\u00b0F`}\r\n          date={weather[0].dt}\r\n          city={cityName}\r\n          country={country}\r\n        />\r\n        ) : ('')\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CurrentWeather\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport 'fontsource-roboto';\r\n\r\nimport './App.css';\r\nimport Search from './components/Search'\r\nimport Forecast from './components/Forecast'\r\nimport TodaysHighlights from './components/TodayHighlights'\r\nimport CurrentWeather from './components/CurrentWeather';\r\n\r\nfunction App() {\r\n\r\n  const [results, setResults] = useState({\r\n    cityName: '',\r\n    country: '',\r\n    weatherDetails: []\r\n  })\r\n  const [query, setQuery] = useState('')\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      // const URL = `http://api.openweathermap.org/data/2.5/forecast/daily?q=${query}&cnt=7&appid=${process.env.REACT_APP_API_KEY}`\r\n      const URL = `https://api.openweathermap.org/data/2.5/forecast?q=${query}&appid=${process.env.REACT_APP_API_KEY}`\r\n    \r\n      const response = await axios.get(URL, {\r\n        params: {\r\n          units: 'imperial',\r\n        }\r\n      })\r\n  \r\n      console.log({\r\n        cityName: response.data.city.name,\r\n        country: response.data.city.country,\r\n        weatherDetails: response.data.list\r\n      })\r\n      setResults({\r\n        cityName: response.data.city.name,\r\n        country: response.data.city.country,\r\n        weatherDetails: response.data.list\r\n      })\r\n    }\r\n    fetchWeather()\r\n  }, [query])\r\n\r\n  return (\r\n    <main>\r\n      <Container>\r\n        <Grid container space={2}>\r\n          <Grid item xs={12} md={3} lg={4}>\r\n            <Search getQuerySearch={(search) => setQuery(search)} />\r\n            <CurrentWeather cityName={results.cityName} country={results.country} weather={results.weatherDetails} />\r\n          </Grid>\r\n          <Grid item xs={12} md={9} lg={8}>\r\n            <TodaysHighlights weather={results.weatherDetails} />\r\n            <Forecast cityName={results.cityName} country={results.country} weather={results.weatherDetails} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}