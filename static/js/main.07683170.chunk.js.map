{"version":3,"sources":["components/Search.js","components/ForecastCard.js","components/Forecast.js","components/HighlightCard.js","components/TodayHighlights.js","components/CurrentWeatherCard.js","components/CurrentWeather.js","App.js","index.js"],"names":["useStyles","makeStyles","marginTop","width","Search","getQuerySearch","useState","search","setSearch","handleKeyPress","e","preventDefault","key","formSubmit","className","FormControl","InputLabel","htmlFor","Input","id","value","onChange","handleSearchInput","target","startAdornment","InputAdornment","position","SearchOutlined","Button","variant","color","type","onClick","onSubmit","disabled","disableElevation","ForecastCard","img","desc","temp","date","city","country","Card","CardContent","CardMedia","component","alt","image","title","Typography","marginBottom","Weather","cityName","weather","formatDateAndTime","dateText","Date","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","length","Grid","container","spacing","map","weatherItem","index","item","index2","xs","md","lg","process","icon","description","Math","round","main","dt_txt","HighlightCard","stat","TodayHighlights","humidity","wind","speed","visibility","feels_like","temp_min","temp_max","CurrentWeatherCard","CurrentWeather","getDate","App","weatherDetails","results","setResults","query","setQuery","useEffect","a","URL","axios","get","params","units","response","data","name","list","console","log","fetchWeather","Container","dt","Forecast","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07683170.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport { Button, FormControl, InputLabel, Input, InputAdornment } from '@material-ui/core'\r\nimport { SearchOutlined } from '@material-ui/icons'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  '@global': {\r\n    '.search-section': {\r\n      marginTop: '5rem'\r\n    },\r\n    '.search-form': {\r\n      width: '100%'\r\n    },\r\n    '.search-button': {\r\n      marginTop: '1rem'\r\n    },\r\n  }\r\n});\r\n\r\nfunction Search({ getQuerySearch }) {\r\n  useStyles();\r\n\r\n  const [search, setSearch] = useState('')\r\n\r\n  const handleSearchInput = (e) => {\r\n    setSearch(e)\r\n  }\r\n\r\n  const handleKeyPress = (e) => {\r\n    e.preventDefault()\r\n    if(e.key === 'Enter') {\r\n      getQuerySearch(search)\r\n      setSearch('')\r\n    }\r\n  }\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault()\r\n    getQuerySearch(search)\r\n    setSearch('')\r\n  }\r\n\r\n  return (\r\n    <section className=\"search-section\">\r\n      <FormControl className='search-form'>\r\n        <InputLabel \r\n          htmlFor=\"input-with-icon-adornment\"\r\n        >\r\n          Search for a city\r\n        </InputLabel>\r\n        <Input\r\n          id=\"input-with-icon-adornment\"\r\n          value={search}\r\n          onChange={(e) => handleSearchInput(e.target.value)}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <SearchOutlined />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n        {(search === '') \r\n        ? (<Button \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            className=\"search-button\" \r\n            type=\"submit\" \r\n            onClick={formSubmit}\r\n            onSubmit={handleKeyPress}\r\n            disabled\r\n         >\r\n          Search\r\n          </Button>\r\n        ) : ( <Button \r\n              variant=\"contained\" \r\n              color=\"primary\"\r\n              className=\"search-button\" \r\n              type=\"submit\" \r\n              onClick={formSubmit}\r\n              onSubmit={handleKeyPress}\r\n              disableElevation\r\n              >  \r\n                Search\r\n              </Button>\r\n        )}\r\n      </FormControl>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core'\r\n\r\nfunction ForecastCard({img, desc, temp, date, city, country}) {\r\n  return (\r\n    <>\r\n      <Card variant='outlined'>\r\n        <CardContent>\r\n          <CardMedia \r\n            component=\"img\"\r\n            alt={desc}\r\n            image={img}\r\n            title={desc}\r\n          />\r\n          <Typography variant=\"h5\">\r\n            {desc}\r\n          </Typography>\r\n          <Typography variant=\"h2\">\r\n            {temp}\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {date}\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            {`${city}, ${country}`}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ForecastCard\r\n","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nimport ForecastCard from './ForecastCard'\r\n\r\nconst useStyles = makeStyles({\r\n  '@global': {\r\n    '.heading': {\r\n      marginTop: '3rem',\r\n      marginBottom: '1rem'\r\n    },\r\n  }\r\n});\r\n\r\nfunction Weather({cityName, country, weather, key}) {\r\n  useStyles()\r\n\r\n  const formatDateAndTime = (dateText) => {\r\n    let options = {\r\n      year: 'numeric', month: 'numeric', day: 'numeric',\r\n      hour: 'numeric', minute: 'numeric', second: 'numeric', \r\n      hour12: true\r\n    };\r\n    const date = new Date(dateText)\r\n\r\n    return new Intl.DateTimeFormat('en-US', options).format(date)\r\n\r\n    // const dateString = dateText\r\n    //   // makes a new array at the string comma and space\r\n    //   .split(' ')\r\n    //   // removes the second array element (the time)\r\n    //   .splice(0, 1)\r\n    //   // joining the new string\r\n    //   .join('')\r\n    // const timeString = dateText\r\n    //   // makes a new array at the string space\r\n    //   .split(' ')\r\n    //   // removes the first array element (the date)\r\n    //   .splice(1, 1)\r\n    //   // joining the new string\r\n    //   .join('')\r\n    // // split the time string by the colon\r\n    // let [hours, minutes] = timeString.split(':')\r\n    // // checking if the hours are greater than 12\r\n    // let amOrPm = hours > 12 ? 'pm' : 'am'\r\n    // // divide the hours \r\n    // hours = hours % 12 || 12\r\n    \r\n    // return `${dateString}, ${hours}:${minutes}${amOrPm}`\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      {(weather.length > 0)\r\n      ? (<Typography variant=\"h2\" className='heading'>\r\n          Forecast\r\n      </Typography>\r\n        ) : ('')\r\n      }\r\n      <Grid container spacing={2}> \r\n        {weather.map((weatherItem, index) => (\r\n          weatherItem.weather.map((item, index2) => (\r\n            <Grid item xs={12} md={6} lg={4} key={index}> \r\n              <ForecastCard \r\n                img={process.env.PUBLIC_URL + `/weather-icons/${item.icon}.png`} \r\n                desc={`${item.description}`}\r\n                temp={`${Math.round(weatherItem.main.temp)}\\u00b0F`}\r\n                date={formatDateAndTime(weatherItem.dt_txt)}\r\n                city={cityName}\r\n                country={country}\r\n                key={index2}\r\n              />\r\n            </Grid>\r\n          ))\r\n        ))}\r\n      </Grid> \r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Weather\r\n","import React from 'react'\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\n\r\nfunction HighlightCard({title, stat}) {\r\n  return (\r\n    <>\r\n      <Card variant='outlined'>\r\n        <CardContent>\r\n          <Typography variant=\"h5\">\r\n            {title}\r\n          </Typography>\r\n          <Typography variant=\"h3\">\r\n            {stat}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HighlightCard\r\n","import React from 'react'\r\nimport { Grid, Typography } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport HighlightCard from './HighlightCard'\r\n\r\nconst useStyles = makeStyles({\r\n  '@global': {\r\n    '.highlights': {\r\n      marginTop: '2rem'\r\n    },\r\n  }\r\n});\r\n\r\nfunction TodayHighlights({ weather }) {\r\n  useStyles()\r\n\r\n  return (\r\n    <section className='highlights'>\r\n      {(weather.length > 0)\r\n        ? ( <Typography variant=\"h2\" className='heading'>\r\n              Today's Highlights\r\n            </Typography>\r\n        ) : ( <Typography variant=\"h2\" className='heading'>\r\n                No data to show... please try searching for a city\r\n              </Typography>)\r\n      }\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Humidity' stat={`${weather[0].main.humidity}%`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Wind Speed' stat={`${Math.round(weather[0].wind.speed)}mph`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Visibility' stat={`${weather[0].visibility}ft`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Feels Like' stat={`${Math.round(weather[0].main.feels_like)}\\u00b0F`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='Low' stat={`${Math.round(weather[0].main.temp_min)}\\u00b0F`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n        <Grid item xs={12} md={6} lg={4}>\r\n          {(weather.length > 0)\r\n            ? (<HighlightCard title='High' stat={`${Math.round(weather[0].main.temp_max)}\\u00b0F`}/>\r\n            ) : ('')\r\n          }\r\n        </Grid>\r\n      </Grid>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default TodayHighlights\r\n","import React from 'react'\r\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core'\r\n\r\nfunction CurrentWeatherCard({img, desc, temp, date, city, country}) {\r\n  return (\r\n    <>\r\n      <Card variant='outlined'>\r\n        <CardContent>\r\n          <CardMedia \r\n            component=\"img\"\r\n            alt={desc}\r\n            image={img}\r\n            title={desc}\r\n          />\r\n          <Typography variant=\"h5\">\r\n            {desc}\r\n          </Typography>\r\n          <Typography variant=\"h2\">\r\n            {temp}\r\n          </Typography>\r\n          <Typography variant=\"h4\">\r\n            {date}\r\n          </Typography>\r\n          <Typography variant='h5'>\r\n            {`${city}, ${country}`}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CurrentWeatherCard\r\n","import React from 'react'\r\nimport CurrentWeatherCard from './CurrentWeatherCard'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles({\r\n  '@global': {\r\n    '.current-weather': {\r\n      marginTop: '3rem',\r\n    },\r\n  }\r\n});\r\n\r\nfunction CurrentWeather({ cityName, country, weather }) {\r\n  useStyles()\r\n\r\n  const getDate = (dateText) => {\r\n    let options = {\r\n      year: 'numeric', month: 'numeric', day: 'numeric',\r\n      hour: 'numeric', minute: 'numeric', second: 'numeric', \r\n      hour12: false\r\n    };\r\n    const date = new Date(dateText)\r\n    return new Intl.DateTimeFormat('en-US', options).format(date)\r\n  }\r\n\r\n  return (\r\n    <section className='current-weather'>\r\n      {(weather.length > 0)\r\n        ? ( <CurrentWeatherCard \r\n          img={process.env.PUBLIC_URL + `/weather-icons/${weather[0].weather[0].icon}.png`} \r\n          desc={`${weather[0].weather[0].description}`}\r\n          temp={`${Math.round(weather[0].main.temp)}\\u00b0F`}\r\n          date={getDate(weather[0].dt_txt)}\r\n          city={cityName}\r\n          country={country}\r\n        />\r\n        ) : ('')\r\n      }\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CurrentWeather\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport 'fontsource-roboto';\r\n\r\nimport Search from './components/Search'\r\nimport Forecast from './components/Forecast'\r\nimport TodaysHighlights from './components/TodayHighlights'\r\nimport CurrentWeather from './components/CurrentWeather';\r\n\r\nfunction App() {\r\n\r\n  const [results, setResults] = useState({\r\n    cityName: '',\r\n    country: '',\r\n    weatherDetails: []\r\n  })\r\n  const [query, setQuery] = useState('')\r\n\r\n  useEffect(() => {\r\n    const fetchWeather = async () => {\r\n      try {\r\n        const URL = `https://api.openweathermap.org/data/2.5/forecast?q=${query}&appid=${process.env.REACT_APP_API_KEY}`\r\n    \r\n        const response = await axios.get(URL, {\r\n          params: {\r\n            units: 'imperial',\r\n          }\r\n        })\r\n        setResults({\r\n          cityName: response.data.city.name,\r\n          country: response.data.city.country,\r\n          weatherDetails: response.data.list\r\n        })\r\n        \r\n      } catch (error) {\r\n        console.log(error)\r\n      }\r\n    }\r\n    fetchWeather()\r\n  }, [query])\r\n  \r\n  return (\r\n    <main>\r\n      <Container>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={3} lg={4}>\r\n            <Search getQuerySearch={(search) => setQuery(search)} key={results.weatherDetails.dt}/>\r\n            <CurrentWeather cityName={results.cityName} country={results.country} weather={results.weatherDetails} key={results.weatherDetails.dt}/>\r\n          </Grid>\r\n          <Grid item xs={12} md={9} lg={8}>\r\n            <TodaysHighlights weather={results.weatherDetails} key={results.weatherDetails.dt}/>\r\n            <Forecast cityName={results.cityName} country={results.country} weather={results.weatherDetails} key={results.weatherDetails.dt}/>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}